#!/bin/bash

cat << END

Filename:

<ssh address>:<path>   - connect to and transfer to/from this ssh addr
<local path>           - transfer to/from this local addr
<rsync addr>::<module> - rsync daemon; confusing

Basic options:

-v             verbose mode, show files as they're transferred
-q             quiet
   --stats     give some stats at the end
   --progress  give stats in the middle

Archive & data options:

-a  archive mode. implies all of:
  -r  recursive
  -l  preserve symlinks
  -p  preserve permissions
  -t  preserve times
  -g  preserve group
  -o  preserve owner (superuser only)
  -D  preserve devices and specials

-H  preserve hard links
-R  use relative path names

-L --copy-links  copy links by resolving them and sending their contents
   --copy-unsafe-links  copy links that may not resolve on the
                            remote end by resolving them before copying

diff efficiency options:

   --inplace   update destination files in-place
   --append    append data onto shorter destination files
-c --checksum  skip based on checksum, not mod-time & size
-u --update    skip files that are newer on the remote
   --partial   don't delete transferred files if the transfer fails
   --size-only skip files that match in size
-z             compress in flight
    

reasonable normal-copy usage (skip based on mod-time & size):

    rsync <filename> <filename>
    rsync -r <dir> <dir>
    rsync --partial --progress <filename> <filename>

paranoid archive-mode usage:

    rsync --partial -aHc <filename> <filename>

efficient transfer of large files usage:

    rsync --progress --partial --stats <filename> <filename>


directories - to copy /x/y/1/2 => /a/b/1/2:

    rsync -aH /x/y/ /a/b/ # also updates /a/b/'s metadata
    rsync -aH /x/y/1 /a/b/
    rsync -aH /x/y/1/ /a/b/1/
    
END
